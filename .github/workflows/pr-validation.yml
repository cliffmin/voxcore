name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Quick checks that run fast
  quick-checks:
    name: Quick Validation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Check PR title
      run: |
        PR_TITLE="${{ github.event.pull_request.title }}"
        # Check for conventional commit format
        if ! echo "$PR_TITLE" | grep -qE "^(feat|fix|docs|refactor|test|chore|style|perf)(\(.+\))?: .+"; then
          echo "❌ PR title doesn't follow conventional commit format"
          echo "Expected format: type(scope): description"
          echo "Example: feat(processor): add disfluency removal"
          exit 1
        fi
        echo "✅ PR title format is valid"
    
    - name: Check file sizes
      run: |
        # Check for files >1MB
        large_files=$(find . -type f -size +1M -not -path "./.git/*" | head -5)
        if [ -n "$large_files" ]; then
          echo "❌ Large files detected (>1MB):"
          echo "$large_files"
          exit 1
        fi
        echo "✅ No large files detected"
    
    - name: Check for merge conflicts
      run: |
        if grep -r "^<<<<<<< " . --exclude-dir=.git; then
          echo "❌ Merge conflict markers found"
          exit 1
        fi
        echo "✅ No merge conflicts detected"
    
    - name: Validate Markdown
      run: |
        # Check for broken Markdown syntax
        for file in $(find . -name "*.md" -not -path "./.git/*"); do
          if ! head -1 "$file" | grep -q "^#" && [ "$(wc -l < "$file")" -gt 10 ]; then
            echo "⚠️  $file might be missing a header"
          fi
        done

  # Java compilation check - fast feedback
  java-compile:
    name: Java Compilation
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Java
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '17'
    
    - name: Check Java compilation
      run: |
        cd whisper-post-processor
        ./gradlew compileJava compileTestJava --no-daemon
    
    - name: Check for TODO/FIXME
      run: |
        echo "=== Checking for TODO/FIXME comments ==="
        grep -r "TODO\|FIXME" --include="*.java" . || echo "No TODOs found"

  # Label PR based on changes
  auto-label:
    name: Auto Label
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Label based on files changed
      uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        configuration-path: .github/labeler.yml
    
  # Comment with test instructions
  pr-comment:
    name: PR Instructions
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    if: github.event.action == 'opened'
    
    steps:
    - name: Comment PR
      uses: actions/github-script@v8
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🔍 PR Validation Checklist
            
            Thanks for your contribution! The CI will validate:
            
            - ✅ Java compilation and tests
            - ✅ Lua syntax validation
            - ✅ Shell script checks
            - ✅ Documentation completeness
            - ✅ Code quality checks
            
            ### Local Testing
            
            Run these commands locally before pushing:
            \`\`\`bash
            # Run all tests
            make test-java-all
            
            # Check shell scripts
            shellcheck scripts/**/*.sh
            
            # Validate Lua
            for f in hammerspoon/*.lua; do luac -p "$f"; done
            \`\`\`
            
            ### Required for Merge
            
            - [ ] All CI checks pass
            - [ ] Tests added/updated for new features
            - [ ] Documentation updated if needed
            - [ ] No merge conflicts
            `
          })